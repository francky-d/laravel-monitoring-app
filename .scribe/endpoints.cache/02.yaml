## Autogenerated by Scribe. DO NOT MODIFY.

name: Applications
description: |-

  APIs for managing applications including CRUD operations, health checks, and monitoring status.
endpoints:
  -
    httpMethods:
      - GET
    uri: api/applications
    metadata:
      groupName: Applications
      groupDescription: |-

        APIs for managing applications including CRUD operations, health checks, and monitoring status.
      subgroup: ''
      subgroupDescription: ''
      title: 'List applications'
      description: 'Retrieve a paginated list of applications for the authenticated user.'
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      group_id:
        name: group_id
        description: 'optional Filter by application group ID.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      group_id: 1
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "Applications retrieved successfully",
            "data": {
              "data": [
                {
                  "id": 1,
                  "name": "My Application",
                  "description": "Application description",
                  "url": "https://example.com",
                  "monitoring_enabled": true,
                  "application_group": {
                    "id": 1,
                    "name": "Production Apps"
                  },
                  "incidents_count": 2,
                  "subscriptions_count": 5
                }
              ],
              "current_page": 1,
              "per_page": 15,
              "total": 1
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/applications
    metadata:
      groupName: Applications
      groupDescription: |-

        APIs for managing applications including CRUD operations, health checks, and monitoring status.
      subgroup: ''
      subgroupDescription: ''
      title: 'Create application'
      description: 'Create a new application for monitoring.'
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The application name.'
        required: true
        example: 'My App'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      url:
        name: url
        description: 'The application URL to monitor.'
        required: true
        example: 'https://example.com'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      url_to_watch:
        name: url_to_watch
        description: 'Must be a valid URL. Must not be greater than 255 characters.'
        required: false
        example: m
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      expected_http_code:
        name: expected_http_code
        description: 'Must be at least 100. Must not be greater than 599.'
        required: false
        example: 15
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      application_group_id:
        name: application_group_id
        description: 'optional Associate with an application group.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      description:
        name: description
        description: 'optional The application description.'
        required: false
        example: 'Production API'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      monitoring_enabled:
        name: monitoring_enabled
        description: 'optional Enable monitoring for this application.'
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      name: 'My App'
      url: 'https://example.com'
      url_to_watch: m
      expected_http_code: 15
      application_group_id: 1
      description: 'Production API'
      monitoring_enabled: true
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "success": true,
            "message": "Application created successfully",
            "data": {
              "id": 1,
              "name": "My App",
              "description": "Production API",
              "url": "https://example.com",
              "monitoring_enabled": true,
              "application_group": null,
              "incidents_count": 0,
              "subscriptions_count": 0
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "message": "The given data was invalid.",
            "errors": {
              "name": ["The name field is required."]
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/applications/{id}'
    metadata:
      groupName: Applications
      groupDescription: |-

        APIs for managing applications including CRUD operations, health checks, and monitoring status.
      subgroup: ''
      subgroupDescription: ''
      title: 'Show application'
      description: 'Retrieve detailed information about a specific application.'
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the application.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      application:
        name: application
        description: 'The application ID.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: architecto
      application: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "Application retrieved successfully",
            "data": {
              "id": 1,
              "name": "My Application",
              "description": "Production API",
              "url": "https://example.com",
              "monitoring_enabled": true,
              "application_group": {
                "id": 1,
                "name": "Production Apps"
              },
              "incidents": [],
              "subscriptions": []
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: |-
          {
            "message": "This action is unauthorized."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "message": "Application not found."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/applications/{id}'
    metadata:
      groupName: Applications
      groupDescription: |-

        APIs for managing applications including CRUD operations, health checks, and monitoring status.
      subgroup: ''
      subgroupDescription: ''
      title: 'Update application'
      description: "Update the specified application's information."
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the application.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      application:
        name: application
        description: 'The application ID.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: architecto
      application: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'optional The application name.'
        required: false
        example: 'Updated App'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      url:
        name: url
        description: 'optional The application URL.'
        required: false
        example: 'https://updated-example.com'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      url_to_watch:
        name: url_to_watch
        description: 'Must be a valid URL. Must not be greater than 255 characters.'
        required: false
        example: m
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      expected_http_code:
        name: expected_http_code
        description: 'Must be at least 100. Must not be greater than 599.'
        required: false
        example: 15
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      application_group_id:
        name: application_group_id
        description: 'optional Change application group.'
        required: false
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      description:
        name: description
        description: 'optional The application description.'
        required: false
        example: 'Updated description'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      monitoring_enabled:
        name: monitoring_enabled
        description: 'optional Enable/disable monitoring.'
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      name: 'Updated App'
      url: 'https://updated-example.com'
      url_to_watch: m
      expected_http_code: 15
      application_group_id: 2
      description: 'Updated description'
      monitoring_enabled: false
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "Application updated successfully",
            "data": {
              "id": 1,
              "name": "Updated App",
              "description": "Updated description",
              "url": "https://updated-example.com",
              "monitoring_enabled": false
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: |-
          {
            "message": "This action is unauthorized."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "message": "The given data was invalid.",
            "errors": {
              "url": ["The url field must be a valid URL."]
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/applications/{id}'
    metadata:
      groupName: Applications
      groupDescription: |-

        APIs for managing applications including CRUD operations, health checks, and monitoring status.
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete application'
      description: 'Delete the specified application. This action cannot be undone.'
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the application.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      application:
        name: application
        description: 'The application ID.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: architecto
      application: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "Application deleted successfully",
            "data": null
          }
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: |-
          {
            "message": "This action is unauthorized."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/applications/{application_id}/check'
    metadata:
      groupName: Applications
      groupDescription: |-

        APIs for managing applications including CRUD operations, health checks, and monitoring status.
      subgroup: ''
      subgroupDescription: ''
      title: 'Trigger health check'
      description: 'Manually trigger a health check for the specified application.'
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      application_id:
        name: application_id
        description: 'The ID of the application.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      application:
        name: application
        description: 'The application ID.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      application_id: architecto
      application: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "Health check initiated",
            "data": {
              "id": 1,
              "name": "My Application",
              "status": "checking"
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/applications/{application_id}/status'
    metadata:
      groupName: Applications
      groupDescription: |-

        APIs for managing applications including CRUD operations, health checks, and monitoring status.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get application status'
      description: 'Get the current monitoring status and recent incident information for an application.'
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      application_id:
        name: application_id
        description: 'The ID of the application.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      application:
        name: application
        description: 'The application ID.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      application_id: architecto
      application: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "Application status retrieved successfully",
            "data": {
              "application": {
                "id": 1,
                "name": "My Application",
                "monitoring_enabled": true
              },
              "status": "operational",
              "recent_incidents": 2,
              "last_check": "2024-01-15T10:30:00Z"
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/applications/{application_id}/subscribers'
    metadata:
      groupName: Applications
      groupDescription: |-

        APIs for managing applications including CRUD operations, health checks, and monitoring status.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get application subscribers'
      description: 'Retrieve all users subscribed to notifications for this application.'
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      application_id:
        name: application_id
        description: 'The ID of the application.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      application:
        name: application
        description: 'The application ID.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      application_id: architecto
      application: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "Application subscribers retrieved successfully",
            "data": [
              {
                "id": 1,
                "application_id": 1,
                "user": {
                  "id": 1,
                  "name": "John Doe",
                  "email": "john@example.com"
                },
                "notification_types": ["email", "slack"]
              }
            ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
