## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Notification Management'
description: |-

  APIs for managing user notification settings and testing notification channels.
endpoints:
  -
    httpMethods:
      - GET
    uri: api/user/notification-settings
    metadata:
      groupName: 'Notification Management'
      groupDescription: |-

        APIs for managing user notification settings and testing notification channels.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get notification settings'
      description: |-
        Retrieve the current user's notification settings including configured webhook URLs
        and notification preferences.
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "Notification settings retrieved successfully",
            "data": {
              "email_notifications": true,
              "slack_webhook_url": "https://hooks.slack.com/services/...",
              "teams_webhook_url": "https://your-tenant.webhook.office.com/...",
              "discord_webhook_url": "https://discord.com/api/webhooks/...",
              "default_notification_channels": ["email"]
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: api/user/notification-settings
    metadata:
      groupName: 'Notification Management'
      groupDescription: |-

        APIs for managing user notification settings and testing notification channels.
      subgroup: ''
      subgroupDescription: ''
      title: 'Update notification settings'
      description: |-
        Update the current user's notification settings including webhook URLs
        and notification preferences.
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      notification_email:
        name: notification_email
        description: 'optional Email address for notifications.'
        required: false
        example: user@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      slack_webhook_url:
        name: slack_webhook_url
        description: 'optional Slack webhook URL for notifications.'
        required: false
        example: 'https://hooks.slack.com/services/...'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      teams_webhook_url:
        name: teams_webhook_url
        description: 'optional Microsoft Teams webhook URL.'
        required: false
        example: 'https://your-tenant.webhook.office.com/...'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      discord_webhook_url:
        name: discord_webhook_url
        description: 'optional Discord webhook URL.'
        required: false
        example: 'https://discord.com/api/webhooks/...'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      email_notifications:
        name: email_notifications
        description: 'optional Whether to enable email notifications.'
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      notification_email: user@example.com
      slack_webhook_url: 'https://hooks.slack.com/services/...'
      teams_webhook_url: 'https://your-tenant.webhook.office.com/...'
      discord_webhook_url: 'https://discord.com/api/webhooks/...'
      email_notifications: true
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "Notification settings updated successfully",
            "data": {
              "id": 1,
              "name": "John Doe",
              "email": "user@example.com",
              "notification_email": "user@example.com",
              "slack_webhook_url": "https://hooks.slack.com/services/...",
              "teams_webhook_url": null,
              "discord_webhook_url": null
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/user/test-notification/{type}'
    metadata:
      groupName: 'Notification Management'
      groupDescription: |-

        APIs for managing user notification settings and testing notification channels.
      subgroup: ''
      subgroupDescription: ''
      title: 'Test notification channel'
      description: 'Send a test notification through the specified channel to verify configuration.'
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      type:
        name: type
        description: 'The notification channel to test. Must be one of: email, slack, teams, discord.'
        required: true
        example: slack
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      type: slack
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      type:
        name: type
        description: ''
        required: true
        example: discord
        type: string
        enumValues:
          - email
          - slack
          - teams
          - discord
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      type: discord
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "Test slack notification sent successfully",
            "data": {
              "success": true
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
            "success": false,
            "message": "Slack webhook URL not configured"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/user/notification-history
    metadata:
      groupName: 'Notification Management'
      groupDescription: |-

        APIs for managing user notification settings and testing notification channels.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get notification history'
      description: 'Retrieve statistics and history of sent notifications for the current user.'
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "Notification history retrieved successfully",
            "data": {
              "total_sent": 0,
              "last_7_days": 0,
              "by_type": {
                "email": 0,
                "slack": 0,
                "teams": 0,
                "discord": 0
              },
              "recent_notifications": []
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
